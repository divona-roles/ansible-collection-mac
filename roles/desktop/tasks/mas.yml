# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: System | Ensure MAS is installed.
  homebrew: name=mas state=present

- name: System | Get MAS account status
  command: mas account
  register: mas_account_result
  failed_when: mas_account_result.rc > 1
  check_mode: false
  changed_when: false
  when:
    - ansible_distribution_version is version('12', '<')

- name: System | Sign in to MAS when email and password are provided.
  command: 'mas signin "{{ mas_email }}" "{{ mas_password }}"'
  register: mas_signin_result
  when:
    - ansible_distribution_version is version('10.13', '<')
    - mas_account_result.rc == 1
    - mas_email is truthy
    - mas_password is truthy
    - not mas_signin_dialog

- name: System | Sign in to MAS when email is provided, and complete password and 2FA using dialog.
  command: 'mas signin "{{ mas_email }}" "{{ mas_password }}" --dialog'
  register: mas_signin_result
  when:
    - ansible_distribution_version is version('10.13', '<')
    - mas_signin_dialog
    - mas_account_result.rc == 1
    - mas_email is truthy

# - name: System | List installed MAS apps.
#   command: mas list
#   register: mas_list
#   check_mode: false
#   changed_when: false

# - name: System | Ensure unwanted MAS apps are uninstalled.
#   command: mas uninstall "{{ item.id|default(item) }}"
#   with_items: "{{ mas_uninstalled_apps }}"
#   when: (item.id | default(item) | string) in mas_list.stdout

# - name: System | Ensure configured MAS apps are installed.
#   command: mas install "{{ item.id|default(item) }}"
#   with_items: "{{ mas_installed_apps + mas_installed_app_ids }}"
#   when: (item.id | default(item) | string) not in mas_list.stdout

# - name: System | Upgrade all apps (if configured).
#   command: mas upgrade
#   when: mas_upgrade_all_apps
